<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tongzhu.user.mapper.RoleLevelSettingMapper" >
  <resultMap id="BaseResultMap" type="com.tongzhu.user.model.RoleLevelSetting" >
    <id column="level" property="level" jdbcType="INTEGER" />
    <result column="next_level" property="nextLevel" jdbcType="INTEGER" />
    <result column="exp" property="exp" jdbcType="INTEGER" />
    <result column="blood" property="blood" jdbcType="INTEGER" />
    <result column="wx_hp" property="wxHp" jdbcType="INTEGER" />
    <result column="ws_ph_atk" property="wsPhAtk" jdbcType="INTEGER" />
    <result column="ws_mf_atk" property="wsMfAtk" jdbcType="INTEGER" />
    <result column="ws_ph_def" property="wsPhDef" jdbcType="INTEGER" />
    <result column="ws_mf_def" property="wsMfDef" jdbcType="INTEGER" />
    <result column="ws_accuracy" property="wsAccuracy" jdbcType="INTEGER" />
    <result column="ws_miss" property="wsMiss" jdbcType="INTEGER" />
    <result column="ws_critical" property="wsCritical" jdbcType="INTEGER" />
    <result column="ws_dcritical" property="wsDcritical" jdbcType="INTEGER" />
    <result column="ck_hp" property="ckHp" jdbcType="INTEGER" />
    <result column="ck_ph_atk" property="ckPhAtk" jdbcType="INTEGER" />
    <result column="ck_mf_atk" property="ckMfAtk" jdbcType="INTEGER" />
    <result column="ck_ph_def" property="ckPhDef" jdbcType="INTEGER" />
    <result column="ck_mf_def" property="ckMfDef" jdbcType="INTEGER" />
    <result column="ck_accuracy" property="ckAccuracy" jdbcType="INTEGER" />
    <result column="ck_miss" property="ckMiss" jdbcType="INTEGER" />
    <result column="ck_critical" property="ckCritical" jdbcType="INTEGER" />
    <result column="ck_dcritical" property="ckDcritical" jdbcType="INTEGER" />
    <result column="gj_hp" property="gjHp" jdbcType="INTEGER" />
    <result column="gj_ph_atk" property="gjPhAtk" jdbcType="INTEGER" />
    <result column="gj_mf_atk" property="gjMfAtk" jdbcType="INTEGER" />
    <result column="gj_ph_def" property="gjPhDef" jdbcType="INTEGER" />
    <result column="gj_mf_def" property="gjMfDef" jdbcType="INTEGER" />
    <result column="gj_accuracy" property="gjAccuracy" jdbcType="INTEGER" />
    <result column="gj_miss" property="gjMiss" jdbcType="INTEGER" />
    <result column="gj_critical" property="gjCritical" jdbcType="INTEGER" />
    <result column="gj_dcritical" property="gjDcritical" jdbcType="INTEGER" />
    <result column="fs_hp" property="fsHp" jdbcType="INTEGER" />
    <result column="fs_ph_atk" property="fsPhAtk" jdbcType="INTEGER" />
    <result column="fs_mf_atk" property="fsMfAtk" jdbcType="INTEGER" />
    <result column="fs_ph_def" property="fsPhDef" jdbcType="INTEGER" />
    <result column="fs_mf_def" property="fsMfDef" jdbcType="INTEGER" />
    <result column="fs_accuracy" property="fsAccuracy" jdbcType="INTEGER" />
    <result column="fs_miss" property="fsMiss" jdbcType="INTEGER" />
    <result column="fs_critical" property="fsCritical" jdbcType="INTEGER" />
    <result column="fs_dcritical" property="fsDcritical" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    level, next_level, exp, blood, wx_hp, ws_ph_atk, ws_mf_atk, ws_ph_def, ws_mf_def, 
    ws_accuracy, ws_miss, ws_critical, ws_dcritical, ck_hp, ck_ph_atk, ck_mf_atk, ck_ph_def, 
    ck_mf_def, ck_accuracy, ck_miss, ck_critical, ck_dcritical, gj_hp, gj_ph_atk, gj_mf_atk, 
    gj_ph_def, gj_mf_def, gj_accuracy, gj_miss, gj_critical, gj_dcritical, fs_hp, fs_ph_atk, 
    fs_mf_atk, fs_ph_def, fs_mf_def, fs_accuracy, fs_miss, fs_critical, fs_dcritical
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tongzhu.user.model.RoleLevelSettingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tz_games_role_level_setting
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tz_games_role_level_setting
    where level = #{level,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tz_games_role_level_setting
    where level = #{level,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tongzhu.user.model.RoleLevelSettingExample" >
    delete from tz_games_role_level_setting
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tongzhu.user.model.RoleLevelSetting" >
    insert into tz_games_role_level_setting (level, next_level, exp, 
      blood, wx_hp, ws_ph_atk, 
      ws_mf_atk, ws_ph_def, ws_mf_def, 
      ws_accuracy, ws_miss, ws_critical, 
      ws_dcritical, ck_hp, ck_ph_atk, 
      ck_mf_atk, ck_ph_def, ck_mf_def, 
      ck_accuracy, ck_miss, ck_critical, 
      ck_dcritical, gj_hp, gj_ph_atk, 
      gj_mf_atk, gj_ph_def, gj_mf_def, 
      gj_accuracy, gj_miss, gj_critical, 
      gj_dcritical, fs_hp, fs_ph_atk, 
      fs_mf_atk, fs_ph_def, fs_mf_def, 
      fs_accuracy, fs_miss, fs_critical, 
      fs_dcritical)
    values (#{level,jdbcType=INTEGER}, #{nextLevel,jdbcType=INTEGER}, #{exp,jdbcType=INTEGER}, 
      #{blood,jdbcType=INTEGER}, #{wxHp,jdbcType=INTEGER}, #{wsPhAtk,jdbcType=INTEGER}, 
      #{wsMfAtk,jdbcType=INTEGER}, #{wsPhDef,jdbcType=INTEGER}, #{wsMfDef,jdbcType=INTEGER}, 
      #{wsAccuracy,jdbcType=INTEGER}, #{wsMiss,jdbcType=INTEGER}, #{wsCritical,jdbcType=INTEGER}, 
      #{wsDcritical,jdbcType=INTEGER}, #{ckHp,jdbcType=INTEGER}, #{ckPhAtk,jdbcType=INTEGER}, 
      #{ckMfAtk,jdbcType=INTEGER}, #{ckPhDef,jdbcType=INTEGER}, #{ckMfDef,jdbcType=INTEGER}, 
      #{ckAccuracy,jdbcType=INTEGER}, #{ckMiss,jdbcType=INTEGER}, #{ckCritical,jdbcType=INTEGER}, 
      #{ckDcritical,jdbcType=INTEGER}, #{gjHp,jdbcType=INTEGER}, #{gjPhAtk,jdbcType=INTEGER}, 
      #{gjMfAtk,jdbcType=INTEGER}, #{gjPhDef,jdbcType=INTEGER}, #{gjMfDef,jdbcType=INTEGER}, 
      #{gjAccuracy,jdbcType=INTEGER}, #{gjMiss,jdbcType=INTEGER}, #{gjCritical,jdbcType=INTEGER}, 
      #{gjDcritical,jdbcType=INTEGER}, #{fsHp,jdbcType=INTEGER}, #{fsPhAtk,jdbcType=INTEGER}, 
      #{fsMfAtk,jdbcType=INTEGER}, #{fsPhDef,jdbcType=INTEGER}, #{fsMfDef,jdbcType=INTEGER}, 
      #{fsAccuracy,jdbcType=INTEGER}, #{fsMiss,jdbcType=INTEGER}, #{fsCritical,jdbcType=INTEGER}, 
      #{fsDcritical,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tongzhu.user.model.RoleLevelSetting" >
    insert into tz_games_role_level_setting
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="level != null" >
        level,
      </if>
      <if test="nextLevel != null" >
        next_level,
      </if>
      <if test="exp != null" >
        exp,
      </if>
      <if test="blood != null" >
        blood,
      </if>
      <if test="wxHp != null" >
        wx_hp,
      </if>
      <if test="wsPhAtk != null" >
        ws_ph_atk,
      </if>
      <if test="wsMfAtk != null" >
        ws_mf_atk,
      </if>
      <if test="wsPhDef != null" >
        ws_ph_def,
      </if>
      <if test="wsMfDef != null" >
        ws_mf_def,
      </if>
      <if test="wsAccuracy != null" >
        ws_accuracy,
      </if>
      <if test="wsMiss != null" >
        ws_miss,
      </if>
      <if test="wsCritical != null" >
        ws_critical,
      </if>
      <if test="wsDcritical != null" >
        ws_dcritical,
      </if>
      <if test="ckHp != null" >
        ck_hp,
      </if>
      <if test="ckPhAtk != null" >
        ck_ph_atk,
      </if>
      <if test="ckMfAtk != null" >
        ck_mf_atk,
      </if>
      <if test="ckPhDef != null" >
        ck_ph_def,
      </if>
      <if test="ckMfDef != null" >
        ck_mf_def,
      </if>
      <if test="ckAccuracy != null" >
        ck_accuracy,
      </if>
      <if test="ckMiss != null" >
        ck_miss,
      </if>
      <if test="ckCritical != null" >
        ck_critical,
      </if>
      <if test="ckDcritical != null" >
        ck_dcritical,
      </if>
      <if test="gjHp != null" >
        gj_hp,
      </if>
      <if test="gjPhAtk != null" >
        gj_ph_atk,
      </if>
      <if test="gjMfAtk != null" >
        gj_mf_atk,
      </if>
      <if test="gjPhDef != null" >
        gj_ph_def,
      </if>
      <if test="gjMfDef != null" >
        gj_mf_def,
      </if>
      <if test="gjAccuracy != null" >
        gj_accuracy,
      </if>
      <if test="gjMiss != null" >
        gj_miss,
      </if>
      <if test="gjCritical != null" >
        gj_critical,
      </if>
      <if test="gjDcritical != null" >
        gj_dcritical,
      </if>
      <if test="fsHp != null" >
        fs_hp,
      </if>
      <if test="fsPhAtk != null" >
        fs_ph_atk,
      </if>
      <if test="fsMfAtk != null" >
        fs_mf_atk,
      </if>
      <if test="fsPhDef != null" >
        fs_ph_def,
      </if>
      <if test="fsMfDef != null" >
        fs_mf_def,
      </if>
      <if test="fsAccuracy != null" >
        fs_accuracy,
      </if>
      <if test="fsMiss != null" >
        fs_miss,
      </if>
      <if test="fsCritical != null" >
        fs_critical,
      </if>
      <if test="fsDcritical != null" >
        fs_dcritical,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="nextLevel != null" >
        #{nextLevel,jdbcType=INTEGER},
      </if>
      <if test="exp != null" >
        #{exp,jdbcType=INTEGER},
      </if>
      <if test="blood != null" >
        #{blood,jdbcType=INTEGER},
      </if>
      <if test="wxHp != null" >
        #{wxHp,jdbcType=INTEGER},
      </if>
      <if test="wsPhAtk != null" >
        #{wsPhAtk,jdbcType=INTEGER},
      </if>
      <if test="wsMfAtk != null" >
        #{wsMfAtk,jdbcType=INTEGER},
      </if>
      <if test="wsPhDef != null" >
        #{wsPhDef,jdbcType=INTEGER},
      </if>
      <if test="wsMfDef != null" >
        #{wsMfDef,jdbcType=INTEGER},
      </if>
      <if test="wsAccuracy != null" >
        #{wsAccuracy,jdbcType=INTEGER},
      </if>
      <if test="wsMiss != null" >
        #{wsMiss,jdbcType=INTEGER},
      </if>
      <if test="wsCritical != null" >
        #{wsCritical,jdbcType=INTEGER},
      </if>
      <if test="wsDcritical != null" >
        #{wsDcritical,jdbcType=INTEGER},
      </if>
      <if test="ckHp != null" >
        #{ckHp,jdbcType=INTEGER},
      </if>
      <if test="ckPhAtk != null" >
        #{ckPhAtk,jdbcType=INTEGER},
      </if>
      <if test="ckMfAtk != null" >
        #{ckMfAtk,jdbcType=INTEGER},
      </if>
      <if test="ckPhDef != null" >
        #{ckPhDef,jdbcType=INTEGER},
      </if>
      <if test="ckMfDef != null" >
        #{ckMfDef,jdbcType=INTEGER},
      </if>
      <if test="ckAccuracy != null" >
        #{ckAccuracy,jdbcType=INTEGER},
      </if>
      <if test="ckMiss != null" >
        #{ckMiss,jdbcType=INTEGER},
      </if>
      <if test="ckCritical != null" >
        #{ckCritical,jdbcType=INTEGER},
      </if>
      <if test="ckDcritical != null" >
        #{ckDcritical,jdbcType=INTEGER},
      </if>
      <if test="gjHp != null" >
        #{gjHp,jdbcType=INTEGER},
      </if>
      <if test="gjPhAtk != null" >
        #{gjPhAtk,jdbcType=INTEGER},
      </if>
      <if test="gjMfAtk != null" >
        #{gjMfAtk,jdbcType=INTEGER},
      </if>
      <if test="gjPhDef != null" >
        #{gjPhDef,jdbcType=INTEGER},
      </if>
      <if test="gjMfDef != null" >
        #{gjMfDef,jdbcType=INTEGER},
      </if>
      <if test="gjAccuracy != null" >
        #{gjAccuracy,jdbcType=INTEGER},
      </if>
      <if test="gjMiss != null" >
        #{gjMiss,jdbcType=INTEGER},
      </if>
      <if test="gjCritical != null" >
        #{gjCritical,jdbcType=INTEGER},
      </if>
      <if test="gjDcritical != null" >
        #{gjDcritical,jdbcType=INTEGER},
      </if>
      <if test="fsHp != null" >
        #{fsHp,jdbcType=INTEGER},
      </if>
      <if test="fsPhAtk != null" >
        #{fsPhAtk,jdbcType=INTEGER},
      </if>
      <if test="fsMfAtk != null" >
        #{fsMfAtk,jdbcType=INTEGER},
      </if>
      <if test="fsPhDef != null" >
        #{fsPhDef,jdbcType=INTEGER},
      </if>
      <if test="fsMfDef != null" >
        #{fsMfDef,jdbcType=INTEGER},
      </if>
      <if test="fsAccuracy != null" >
        #{fsAccuracy,jdbcType=INTEGER},
      </if>
      <if test="fsMiss != null" >
        #{fsMiss,jdbcType=INTEGER},
      </if>
      <if test="fsCritical != null" >
        #{fsCritical,jdbcType=INTEGER},
      </if>
      <if test="fsDcritical != null" >
        #{fsDcritical,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tongzhu.user.model.RoleLevelSettingExample" resultType="java.lang.Integer" >
    select count(*) from tz_games_role_level_setting
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tz_games_role_level_setting
    <set >
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.nextLevel != null" >
        next_level = #{record.nextLevel,jdbcType=INTEGER},
      </if>
      <if test="record.exp != null" >
        exp = #{record.exp,jdbcType=INTEGER},
      </if>
      <if test="record.blood != null" >
        blood = #{record.blood,jdbcType=INTEGER},
      </if>
      <if test="record.wxHp != null" >
        wx_hp = #{record.wxHp,jdbcType=INTEGER},
      </if>
      <if test="record.wsPhAtk != null" >
        ws_ph_atk = #{record.wsPhAtk,jdbcType=INTEGER},
      </if>
      <if test="record.wsMfAtk != null" >
        ws_mf_atk = #{record.wsMfAtk,jdbcType=INTEGER},
      </if>
      <if test="record.wsPhDef != null" >
        ws_ph_def = #{record.wsPhDef,jdbcType=INTEGER},
      </if>
      <if test="record.wsMfDef != null" >
        ws_mf_def = #{record.wsMfDef,jdbcType=INTEGER},
      </if>
      <if test="record.wsAccuracy != null" >
        ws_accuracy = #{record.wsAccuracy,jdbcType=INTEGER},
      </if>
      <if test="record.wsMiss != null" >
        ws_miss = #{record.wsMiss,jdbcType=INTEGER},
      </if>
      <if test="record.wsCritical != null" >
        ws_critical = #{record.wsCritical,jdbcType=INTEGER},
      </if>
      <if test="record.wsDcritical != null" >
        ws_dcritical = #{record.wsDcritical,jdbcType=INTEGER},
      </if>
      <if test="record.ckHp != null" >
        ck_hp = #{record.ckHp,jdbcType=INTEGER},
      </if>
      <if test="record.ckPhAtk != null" >
        ck_ph_atk = #{record.ckPhAtk,jdbcType=INTEGER},
      </if>
      <if test="record.ckMfAtk != null" >
        ck_mf_atk = #{record.ckMfAtk,jdbcType=INTEGER},
      </if>
      <if test="record.ckPhDef != null" >
        ck_ph_def = #{record.ckPhDef,jdbcType=INTEGER},
      </if>
      <if test="record.ckMfDef != null" >
        ck_mf_def = #{record.ckMfDef,jdbcType=INTEGER},
      </if>
      <if test="record.ckAccuracy != null" >
        ck_accuracy = #{record.ckAccuracy,jdbcType=INTEGER},
      </if>
      <if test="record.ckMiss != null" >
        ck_miss = #{record.ckMiss,jdbcType=INTEGER},
      </if>
      <if test="record.ckCritical != null" >
        ck_critical = #{record.ckCritical,jdbcType=INTEGER},
      </if>
      <if test="record.ckDcritical != null" >
        ck_dcritical = #{record.ckDcritical,jdbcType=INTEGER},
      </if>
      <if test="record.gjHp != null" >
        gj_hp = #{record.gjHp,jdbcType=INTEGER},
      </if>
      <if test="record.gjPhAtk != null" >
        gj_ph_atk = #{record.gjPhAtk,jdbcType=INTEGER},
      </if>
      <if test="record.gjMfAtk != null" >
        gj_mf_atk = #{record.gjMfAtk,jdbcType=INTEGER},
      </if>
      <if test="record.gjPhDef != null" >
        gj_ph_def = #{record.gjPhDef,jdbcType=INTEGER},
      </if>
      <if test="record.gjMfDef != null" >
        gj_mf_def = #{record.gjMfDef,jdbcType=INTEGER},
      </if>
      <if test="record.gjAccuracy != null" >
        gj_accuracy = #{record.gjAccuracy,jdbcType=INTEGER},
      </if>
      <if test="record.gjMiss != null" >
        gj_miss = #{record.gjMiss,jdbcType=INTEGER},
      </if>
      <if test="record.gjCritical != null" >
        gj_critical = #{record.gjCritical,jdbcType=INTEGER},
      </if>
      <if test="record.gjDcritical != null" >
        gj_dcritical = #{record.gjDcritical,jdbcType=INTEGER},
      </if>
      <if test="record.fsHp != null" >
        fs_hp = #{record.fsHp,jdbcType=INTEGER},
      </if>
      <if test="record.fsPhAtk != null" >
        fs_ph_atk = #{record.fsPhAtk,jdbcType=INTEGER},
      </if>
      <if test="record.fsMfAtk != null" >
        fs_mf_atk = #{record.fsMfAtk,jdbcType=INTEGER},
      </if>
      <if test="record.fsPhDef != null" >
        fs_ph_def = #{record.fsPhDef,jdbcType=INTEGER},
      </if>
      <if test="record.fsMfDef != null" >
        fs_mf_def = #{record.fsMfDef,jdbcType=INTEGER},
      </if>
      <if test="record.fsAccuracy != null" >
        fs_accuracy = #{record.fsAccuracy,jdbcType=INTEGER},
      </if>
      <if test="record.fsMiss != null" >
        fs_miss = #{record.fsMiss,jdbcType=INTEGER},
      </if>
      <if test="record.fsCritical != null" >
        fs_critical = #{record.fsCritical,jdbcType=INTEGER},
      </if>
      <if test="record.fsDcritical != null" >
        fs_dcritical = #{record.fsDcritical,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tz_games_role_level_setting
    set level = #{record.level,jdbcType=INTEGER},
      next_level = #{record.nextLevel,jdbcType=INTEGER},
      exp = #{record.exp,jdbcType=INTEGER},
      blood = #{record.blood,jdbcType=INTEGER},
      wx_hp = #{record.wxHp,jdbcType=INTEGER},
      ws_ph_atk = #{record.wsPhAtk,jdbcType=INTEGER},
      ws_mf_atk = #{record.wsMfAtk,jdbcType=INTEGER},
      ws_ph_def = #{record.wsPhDef,jdbcType=INTEGER},
      ws_mf_def = #{record.wsMfDef,jdbcType=INTEGER},
      ws_accuracy = #{record.wsAccuracy,jdbcType=INTEGER},
      ws_miss = #{record.wsMiss,jdbcType=INTEGER},
      ws_critical = #{record.wsCritical,jdbcType=INTEGER},
      ws_dcritical = #{record.wsDcritical,jdbcType=INTEGER},
      ck_hp = #{record.ckHp,jdbcType=INTEGER},
      ck_ph_atk = #{record.ckPhAtk,jdbcType=INTEGER},
      ck_mf_atk = #{record.ckMfAtk,jdbcType=INTEGER},
      ck_ph_def = #{record.ckPhDef,jdbcType=INTEGER},
      ck_mf_def = #{record.ckMfDef,jdbcType=INTEGER},
      ck_accuracy = #{record.ckAccuracy,jdbcType=INTEGER},
      ck_miss = #{record.ckMiss,jdbcType=INTEGER},
      ck_critical = #{record.ckCritical,jdbcType=INTEGER},
      ck_dcritical = #{record.ckDcritical,jdbcType=INTEGER},
      gj_hp = #{record.gjHp,jdbcType=INTEGER},
      gj_ph_atk = #{record.gjPhAtk,jdbcType=INTEGER},
      gj_mf_atk = #{record.gjMfAtk,jdbcType=INTEGER},
      gj_ph_def = #{record.gjPhDef,jdbcType=INTEGER},
      gj_mf_def = #{record.gjMfDef,jdbcType=INTEGER},
      gj_accuracy = #{record.gjAccuracy,jdbcType=INTEGER},
      gj_miss = #{record.gjMiss,jdbcType=INTEGER},
      gj_critical = #{record.gjCritical,jdbcType=INTEGER},
      gj_dcritical = #{record.gjDcritical,jdbcType=INTEGER},
      fs_hp = #{record.fsHp,jdbcType=INTEGER},
      fs_ph_atk = #{record.fsPhAtk,jdbcType=INTEGER},
      fs_mf_atk = #{record.fsMfAtk,jdbcType=INTEGER},
      fs_ph_def = #{record.fsPhDef,jdbcType=INTEGER},
      fs_mf_def = #{record.fsMfDef,jdbcType=INTEGER},
      fs_accuracy = #{record.fsAccuracy,jdbcType=INTEGER},
      fs_miss = #{record.fsMiss,jdbcType=INTEGER},
      fs_critical = #{record.fsCritical,jdbcType=INTEGER},
      fs_dcritical = #{record.fsDcritical,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tongzhu.user.model.RoleLevelSetting" >
    update tz_games_role_level_setting
    <set >
      <if test="nextLevel != null" >
        next_level = #{nextLevel,jdbcType=INTEGER},
      </if>
      <if test="exp != null" >
        exp = #{exp,jdbcType=INTEGER},
      </if>
      <if test="blood != null" >
        blood = #{blood,jdbcType=INTEGER},
      </if>
      <if test="wxHp != null" >
        wx_hp = #{wxHp,jdbcType=INTEGER},
      </if>
      <if test="wsPhAtk != null" >
        ws_ph_atk = #{wsPhAtk,jdbcType=INTEGER},
      </if>
      <if test="wsMfAtk != null" >
        ws_mf_atk = #{wsMfAtk,jdbcType=INTEGER},
      </if>
      <if test="wsPhDef != null" >
        ws_ph_def = #{wsPhDef,jdbcType=INTEGER},
      </if>
      <if test="wsMfDef != null" >
        ws_mf_def = #{wsMfDef,jdbcType=INTEGER},
      </if>
      <if test="wsAccuracy != null" >
        ws_accuracy = #{wsAccuracy,jdbcType=INTEGER},
      </if>
      <if test="wsMiss != null" >
        ws_miss = #{wsMiss,jdbcType=INTEGER},
      </if>
      <if test="wsCritical != null" >
        ws_critical = #{wsCritical,jdbcType=INTEGER},
      </if>
      <if test="wsDcritical != null" >
        ws_dcritical = #{wsDcritical,jdbcType=INTEGER},
      </if>
      <if test="ckHp != null" >
        ck_hp = #{ckHp,jdbcType=INTEGER},
      </if>
      <if test="ckPhAtk != null" >
        ck_ph_atk = #{ckPhAtk,jdbcType=INTEGER},
      </if>
      <if test="ckMfAtk != null" >
        ck_mf_atk = #{ckMfAtk,jdbcType=INTEGER},
      </if>
      <if test="ckPhDef != null" >
        ck_ph_def = #{ckPhDef,jdbcType=INTEGER},
      </if>
      <if test="ckMfDef != null" >
        ck_mf_def = #{ckMfDef,jdbcType=INTEGER},
      </if>
      <if test="ckAccuracy != null" >
        ck_accuracy = #{ckAccuracy,jdbcType=INTEGER},
      </if>
      <if test="ckMiss != null" >
        ck_miss = #{ckMiss,jdbcType=INTEGER},
      </if>
      <if test="ckCritical != null" >
        ck_critical = #{ckCritical,jdbcType=INTEGER},
      </if>
      <if test="ckDcritical != null" >
        ck_dcritical = #{ckDcritical,jdbcType=INTEGER},
      </if>
      <if test="gjHp != null" >
        gj_hp = #{gjHp,jdbcType=INTEGER},
      </if>
      <if test="gjPhAtk != null" >
        gj_ph_atk = #{gjPhAtk,jdbcType=INTEGER},
      </if>
      <if test="gjMfAtk != null" >
        gj_mf_atk = #{gjMfAtk,jdbcType=INTEGER},
      </if>
      <if test="gjPhDef != null" >
        gj_ph_def = #{gjPhDef,jdbcType=INTEGER},
      </if>
      <if test="gjMfDef != null" >
        gj_mf_def = #{gjMfDef,jdbcType=INTEGER},
      </if>
      <if test="gjAccuracy != null" >
        gj_accuracy = #{gjAccuracy,jdbcType=INTEGER},
      </if>
      <if test="gjMiss != null" >
        gj_miss = #{gjMiss,jdbcType=INTEGER},
      </if>
      <if test="gjCritical != null" >
        gj_critical = #{gjCritical,jdbcType=INTEGER},
      </if>
      <if test="gjDcritical != null" >
        gj_dcritical = #{gjDcritical,jdbcType=INTEGER},
      </if>
      <if test="fsHp != null" >
        fs_hp = #{fsHp,jdbcType=INTEGER},
      </if>
      <if test="fsPhAtk != null" >
        fs_ph_atk = #{fsPhAtk,jdbcType=INTEGER},
      </if>
      <if test="fsMfAtk != null" >
        fs_mf_atk = #{fsMfAtk,jdbcType=INTEGER},
      </if>
      <if test="fsPhDef != null" >
        fs_ph_def = #{fsPhDef,jdbcType=INTEGER},
      </if>
      <if test="fsMfDef != null" >
        fs_mf_def = #{fsMfDef,jdbcType=INTEGER},
      </if>
      <if test="fsAccuracy != null" >
        fs_accuracy = #{fsAccuracy,jdbcType=INTEGER},
      </if>
      <if test="fsMiss != null" >
        fs_miss = #{fsMiss,jdbcType=INTEGER},
      </if>
      <if test="fsCritical != null" >
        fs_critical = #{fsCritical,jdbcType=INTEGER},
      </if>
      <if test="fsDcritical != null" >
        fs_dcritical = #{fsDcritical,jdbcType=INTEGER},
      </if>
    </set>
    where level = #{level,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tongzhu.user.model.RoleLevelSetting" >
    update tz_games_role_level_setting
    set next_level = #{nextLevel,jdbcType=INTEGER},
      exp = #{exp,jdbcType=INTEGER},
      blood = #{blood,jdbcType=INTEGER},
      wx_hp = #{wxHp,jdbcType=INTEGER},
      ws_ph_atk = #{wsPhAtk,jdbcType=INTEGER},
      ws_mf_atk = #{wsMfAtk,jdbcType=INTEGER},
      ws_ph_def = #{wsPhDef,jdbcType=INTEGER},
      ws_mf_def = #{wsMfDef,jdbcType=INTEGER},
      ws_accuracy = #{wsAccuracy,jdbcType=INTEGER},
      ws_miss = #{wsMiss,jdbcType=INTEGER},
      ws_critical = #{wsCritical,jdbcType=INTEGER},
      ws_dcritical = #{wsDcritical,jdbcType=INTEGER},
      ck_hp = #{ckHp,jdbcType=INTEGER},
      ck_ph_atk = #{ckPhAtk,jdbcType=INTEGER},
      ck_mf_atk = #{ckMfAtk,jdbcType=INTEGER},
      ck_ph_def = #{ckPhDef,jdbcType=INTEGER},
      ck_mf_def = #{ckMfDef,jdbcType=INTEGER},
      ck_accuracy = #{ckAccuracy,jdbcType=INTEGER},
      ck_miss = #{ckMiss,jdbcType=INTEGER},
      ck_critical = #{ckCritical,jdbcType=INTEGER},
      ck_dcritical = #{ckDcritical,jdbcType=INTEGER},
      gj_hp = #{gjHp,jdbcType=INTEGER},
      gj_ph_atk = #{gjPhAtk,jdbcType=INTEGER},
      gj_mf_atk = #{gjMfAtk,jdbcType=INTEGER},
      gj_ph_def = #{gjPhDef,jdbcType=INTEGER},
      gj_mf_def = #{gjMfDef,jdbcType=INTEGER},
      gj_accuracy = #{gjAccuracy,jdbcType=INTEGER},
      gj_miss = #{gjMiss,jdbcType=INTEGER},
      gj_critical = #{gjCritical,jdbcType=INTEGER},
      gj_dcritical = #{gjDcritical,jdbcType=INTEGER},
      fs_hp = #{fsHp,jdbcType=INTEGER},
      fs_ph_atk = #{fsPhAtk,jdbcType=INTEGER},
      fs_mf_atk = #{fsMfAtk,jdbcType=INTEGER},
      fs_ph_def = #{fsPhDef,jdbcType=INTEGER},
      fs_mf_def = #{fsMfDef,jdbcType=INTEGER},
      fs_accuracy = #{fsAccuracy,jdbcType=INTEGER},
      fs_miss = #{fsMiss,jdbcType=INTEGER},
      fs_critical = #{fsCritical,jdbcType=INTEGER},
      fs_dcritical = #{fsDcritical,jdbcType=INTEGER}
    where level = #{level,jdbcType=INTEGER}
  </update>
</mapper>